1. Class and object

- classes are blueprint for creating objects.
- objects are instances of classes.
- class defines attributes and methods(functions) that its objects can use.

2. class has data/attributes and function/methods.

3. Why python is called object oriented programming?

-> __init__(self) -> constructor

4. Why python is called oop?
- Everything in python is an object (data structure, data type etc..)

5. Advantages of oops:
   - You can create your own datatype
   - Code reusability
   - debugging
   - easy to colab

6. End to end project (chatbook cls)

7. Can create attribute outside the class as well.

8. A function is a block of reusable code defined using def. A method is defined inside a class that operates on instances of that class.

9. Encapsulation:
- Is the concept of bundling data (attributes) and methods (functions) that operate
on the data into a single unit (a class). It also restricts direct access to some of 
an objects components to protect data integrity.

10. Getter and setter
- To get the hidden attribute and to set the hidden attribute while maintaining Encapsulation.

11. static variable also called as a class variable that is shared among all instances of a class. 
Unlike instance variables, Which are unique to each object.


12. Inheritance: Is a fundamental oops concept that allows one class
to acquire properties and behaviors from another class. 

- This promotes code reusability and hierarchical structuring code.

13. Superkeyword can be used only inside the class, can not access variables/attributes
